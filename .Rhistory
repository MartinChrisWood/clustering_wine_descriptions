knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(kohonen)       # Functions for Self-Organising Maps
library(visdat)        # For visualisations useful for initial exploration (eg; missingness)
setwd("/mnt/store/Projects/clustering_wine_descriptions")
# Load the original metadata on wines
wine_df <- read.csv("/data/wine_reviews_with_topic_distributions.csv")
# Load the original metadata on wines
wine_df <- read.csv("./data/wine_reviews_with_topic_distributions.csv")
# Drop the topics which we know to be "duds" from exploration in Python ()
wine_df <- subset(wine_df, select = -c(X0, X1, X9))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(kohonen)       # Functions for Self-Organising Maps
library(visdat)        # For visualisations useful for initial exploration (eg; missingness)
setwd("/mnt/store/Projects/clustering_wine_descriptions")
# Load the original metadata on wines
wine_df <- read.csv("./data/wine_reviews_with_topic_distributions.csv")
# Drop the topics which we know to be "duds" from exploration in Python ()
wine_df <- subset(wine_df, select = -c(X0, X1, X9))
# Quick utility function; returns index of max-valued element of vector/matrix
max_index <- function(x) {
which(x==max(x))
}
# Quickly iterate over and assign each wine to the topic with highest probability for that document!
wine_df['topics'] <- as.factor(apply(wine_df[,18:25], 1, max_index))
# Record for each wine its topic probability for that highest probability wine, for my own convenience later
wine_df['topic_certainty'] <- apply(wine_df[,18:25], 1, max)
# Calculate some stats on the number of wines from different countries
priors <- data.frame(table(wine_df['country']))
priors['frac'] <- priors['Freq'] / sum(priors['Freq'])
priors <- priors[order(-priors$frac),]
colnames(priors) <- c("country", "freq", "frac")
head(priors)
# What's the relative membership of topics?
summary(wine_df['topics'])
summary(wine_df['country'])
ggplot(data=wine_df, aes(x=topics, fill=country)) + geom_bar()
# For each cluster, what's the dominant country of origin?
wines_count <- wine_df %>% count(country, topics)
wines_count <- wines_count %>% merge(priors, by="country")
wines_count['weighted_n'] <- wines_count['n'] / wines_count['frac']
# drop any country with < 1000 wines to its name because it messes with the stats!
wines_count <- wines_count[wines_count['freq'] >=1000, ]
wines_count %>% group_by(topics) %>% top_n(1, weighted_n) -> topic_dominant_country
topic_dominant_country
# What's the most representative single wine for each topic, that for which the topic probability is highest?
wine_df %>% group_by(topics) %>% top_n(1, topic_certainty) -> wine_archetypes
wine_archetypes[,c("topics", "country", "title")]
